<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:xml2tex="http://transpect.io/xml2tex" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

  <a:documentation> The xml2tex configuration file schema. </a:documentation>

  <include href="xslt2.rng"/>

  <start ns="http://transpect.io/xml2tex">
    <ref name="xml2tex.set"/>
  </start>

  <!--  *
        * elements
        * -->

  <define name="xml2tex.set">
    <element name="xml2tex:set">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>set</i> element</h1>
        <p>The root element of the xml2tex configuration.</p>
      </a:documentation>
      <ref name="xml2tex.set.attributes"/>
      <ref name="xml2tex.set.content"/>
    </element>
  </define>

  <define name="xml2tex.import">
    <element name="xml2tex:import">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>import</i> element</h1>
        <p>Import other xml2tex configuration files. Imported character maps and templates will always have a 
          lower priority than those in the importing configuration. Imported <code>preamble</code>, <code>front</code> 
          and <code>back</code> will be replaced if they exist in the importing configuration</p>
      </a:documentation>
      <ref name="xml2tex.import.attributes"/>
      <ref name="xml2tex.content.empty"/>
    </element>
  </define>

  <define name="xml2tex.preamble">
    <element name="xml2tex:preamble">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>preamble</i> element</h1>
        <p>Place declarations such as document class, used packages and other information 
          TeX will need to format the document correctly</p>
      </a:documentation>
      <ref name="xml2tex.atom.content"/>
    </element>
  </define>

  <define name="xml2tex.front">
    <element name="xml2tex:front">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>front</i> element</h1>
        <p>Used for TeX instructions to be placed immediately after 
        the begin of the document (e.g. <code>\begin{document}</code>).</p>
      </a:documentation>
      <ref name="xml2tex.atom.content"/>
    </element>
  </define>

  <define name="xml2tex.back">
    <element name="xml2tex:back">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>back</i> element</h1>
        <p>Used for TeX instructions to be placed immediately before 
          the end of the document (e.g. <code>\end{document}</code>).</p>
      </a:documentation>
      <ref name="xml2tex.atom.content"/>
    </element>
  </define>

  <define name="xml2tex.ns">
    <element name="xml2tex:ns">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>ns</i> element</h1>
        <p>Specify the XML namespaces used in the document.</p>
      </a:documentation>
      <ref name="xml2tex.ns.attributes"/>
      <ref name="xml2tex.content.empty"/>
    </element>
  </define>

  <define name="xml2tex.template">
    <element name="xml2tex:template">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>template</i> element</h1>
        <p>Used to create a TeX instruction for a specified XML context.</p>
      </a:documentation>
      <ref name="xml2tex.template.attributes"/>
      <ref name="xml2tex.templatemodel.content"/>
    </element>
  </define>
  
  <define name="xml2tex.style">
    <element name="xml2tex:style">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>style</i> element</h1>
        <p>This is a shorter but less powerful alternative for <code>template</code>. You can select 
          elements by a specific attribute and value. The attribute name has to be declared
          globally with <code>@style-attribute</code> at <code>xml2tex:set</code>.</p>
      </a:documentation>
      <ref name="xml2tex.style.attributes"/>  
    </element>
  </define>

  <define name="xml2tex.regex">
    <element name="xml2tex:regex">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>regex</i> element</h1>
        <p>Create TeX instructions where the specified regular expression 
          pattern matches a part of text.</p>
      </a:documentation>
      <ref name="xml2tex.regex.attributes"/>
      <ref name="xml2tex.templatemodel.content"/>
    </element>
  </define>

  <define name="xml2tex.charmap">
    <element name="xml2tex:charmap">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>charmap</i> element</h1>
        <p>A collection of mapping instructions for mapping 
          characters to specific TeX instructions.</p>
      </a:documentation>
      <ref name="xml2tex.charmap.attributes"/>
      <ref name="xml2tex.charmap.content"/>
    </element>
  </define>

  <define name="xml2tex.rule">
    <element name="xml2tex:rule">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>rule</i> element</h1>
        <p>Specify name and type of the TeX instruction and additional formatting.</p>
      </a:documentation>
      <ref name="xml2tex.rule.attributes"/>
      <ref name="xml2tex.rule.content"/>
    </element>
  </define>

  <define name="xml2tex.file">
    <element name="xml2tex:file">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>file</i> element</h1>
        <p>You can store the evaluated context of the <code>template</code> 
          to a separate file by specifying a file reference.</p>
      </a:documentation>
      <ref name="xml2tex.file.attributes"/>
    </element>
  </define>

  <define name="xml2tex.char">
    <element name="xml2tex:char">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>char</i> element</h1>
        <p>Used to replace a character with a TeX instruction.</p>
      </a:documentation>
      <ref name="xml2tex.char.attributes"/>
      <ref name="xml2tex.content.empty"/>
    </element>
  </define>

  <define name="xml2tex.text">
    <element name="xml2tex:text">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>text</i> element</h1>
        <p>Used to add text after the TeX instruction such as <code>\foo bar</code>. 
          There are three ways to control how the content is applied:</p>
        <p>a) <code>&lt;text/&gt;</code> The context which is specified by <code>template/@content</code> is applied.<br/>
          b) <code>&lt;text select="foo"/&gt;</code> The context which is specified by the XPath expression in the <code>@select</code> attribute is applied.<br/>
          c) <code>&lt;text&gt;foo&lt;/text&gt;</code> The plain text string is inserted.</p>
      </a:documentation>
      <ref name="xml2tex.atom.attributes"/>
      <zeroOrMore>
        <ref name="xml2tex.with-param.element"/>
      </zeroOrMore>
      <ref name="xml2tex.atom.content"/>
    </element>
  </define>

  <define name="xml2tex.param">
    <element name="xml2tex:param">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>param</i> element</h1>
        <p>Used to create a parameter for a TeX instruction such as <code>\foo{bar}</code>. 
          There are three ways to control how the content is applied:</p>
        <p>a) <code>&lt;param/&gt;</code> The context which is specified by <code>template/@content</code> is applied.<br/>
           b) <code>&lt;param select="foo"/&gt;</code> The context which is specified by the XPath expression in the <code>@select</code> attribute is applied.<br/>
           c) <code>&lt;param&gt;foo&lt;/text&gt;</code> The plain text string is just inserted.</p>
      </a:documentation>
      <ref name="xml2tex.atom.attributes"/>
      <zeroOrMore>
        <ref name="xml2tex.with-param.element"/>
      </zeroOrMore>
      <ref name="xml2tex.atom.content"/>
    </element>
  </define>

  <define name="xml2tex.with-param.element">
    <element name="with-param">
      <ref name="xslt2.extension.atts"/>
      <attribute name="name">
        <ref name="xslt2.qname.datatype"/>
      </attribute>
      <optional>
        <attribute name="as">
          <ref name="xslt2.sequence.datatype"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tunnel">
          <choice>
            <value>yes</value>
            <value>no</value>
          </choice>
        </attribute>
      </optional>
      <choice>
        <attribute name="select">
          <ref name="xslt2.expression.datatype"/>
        </attribute>
        <ref name="xslt2.template.model"/>
      </choice>
    </element>
  </define>
  
  <define name="xml2tex.option">
    <element name="xml2tex:option">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>option</i> element</h1>
        <p>Used to create an option for a TeX instruction such as <code>\foo[bar]</code>. 
          There are three ways to control how the content is applied:</p>
        <p>a) <code>&lt;text/&gt;</code> The context which is specified by <code>template/@content</code> is applied.<br/>
          b) <code>&lt;text select="foo"/&gt;</code> The context which is specified by the XPath expression in the <code>@select</code> attribute is applied.<br/>
          c) <code>&lt;text&gt;foo&lt;/text&gt;</code> The plain text string is just inserted.</p>
      </a:documentation>
      <ref name="xml2tex.atom.attributes"/>
      <zeroOrMore>
        <ref name="xml2tex.with-param.element"/>
      </zeroOrMore>
      <ref name="xml2tex.atom.content"/>
    </element>
  </define>

  <!--  *
        * attributes
        * -->

  <define name="xml2tex.set.attributes">
    <interleave>
      <optional>
        <attribute name="xml:base">
          <data type="anyURI"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="style-attribute">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">For style mapping via 
            <code>&#xa;style</code> you can choose the attribute to be evaluated as style e.g.
            <code>role</code> in DocBook or <code>rend</code> in TEI.
          </a:documentation>
          <text/>
        </attribute>
      </optional>
      <optional>
        <attribute name="decompose-diacritics">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">Should Unicode combining characters
            automatically converted to its LaTeX supplements, e.g. <code>Ü =>\"U</code>? 
          </a:documentation>
          <choice>
            <value>yes</value>
            <value>no</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="table-model">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">Specify the table-model which is used
            to create TeX tables. Permitted values are <code>tabular</code>, <code>tabularx</code> and <code>htmltabs</code>.
          </a:documentation>
          <choice>
            <value>tabular</value>
            <value>tabularx</value>
            <value>htmltabs</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="table-grid">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">Specify whether table grid lines 
            should be rendered. Only effective when selected <code>table-model </code> is 
            <code>tabular</code> or <code>tabularx</code>.
          </a:documentation>
          <choice>
            <value>yes</value>
            <value>no</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">Overrides the table column declaration of the first column.</a:documentation>
        <attribute name="table-first-col-declaration">
          <text/>
        </attribute>
      </optional>
      <optional>
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">Overrides the table column declaration. You can specify different declarations
          for first and last column with the options <code>table-first-col-declaration</code> and <code>table-last-col-declaration</code>. 
        </a:documentation>
        <attribute name="table-col-declaration">
          <text/>
        </attribute>
      </optional>
      <optional>
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">Overrides the table column declaration of the last column.</a:documentation>
        <attribute name="table-last-col-declaration">
          <text/>
        </attribute>
      </optional>
    </interleave>
  </define>

  <define name="xml2tex.atom.attributes">
    <choice>
      <interleave>
        <optional>
          <attribute name="select">
            <a:documentation xmlns="http://www.w3.org/1999/xhtml">
              <h1>The <i>select</i> attribute</h1>
              <p>Value: <code>XPath expression</code></p>
              <p>Specify an XPath expression to select a node within the selected context.</p>
            </a:documentation>
            <text/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type">
            <a:documentation xmlns="http://www.w3.org/1999/xhtml">
              <h1>The <i>type</i> attribute</h1>
              <p>Value: <code>'text'</code></p>
              <p>Specify if XPath expression in @select should be evaluated as text only.</p>
            </a:documentation>
            <text/>
          </attribute>
        </optional>
        <optional>
          <attribute name="regex-group">
            <a:documentation xmlns="http://www.w3.org/1999/xhtml">
              <h1>The <i>select</i> attribute</h1>
              <p>Value: <code>xs:integer</code></p>
              <p>Specify the number of the regex groups to be selected.</p>
            </a:documentation>
            <data type="integer"/>
          </attribute>
        </optional>
      </interleave>
    </choice>
  </define>

  <define name="xml2tex.import.attributes">
    <attribute name="href">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>href</i> attribute</h1>
        <p>Value: <code>path</code></p>
        <p>Import other xml2tex configuration files by specifying their relative or absolute path.</p>
      </a:documentation>
      <text/>
    </attribute>
  </define>

  <define name="xml2tex.ns.attributes">
    <interleave>
      <attribute name="prefix">
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">
          <h1>The <i>prefix</i> attribute</h1>
          <p>Value: <code>xs:string</code></p>
          <p>Specify the namespace prefix. The values of <code>prefix</code> and 
            <code>uri</code> are used to create an XML namespace declaration
            in the generated stylesheet.</p>
        </a:documentation>
        <data type="QName"/>
      </attribute>
      <attribute name="uri">
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">
          <h1>The <i>uri</i> attribute</h1>
          <p>Value: <code>xs:string</code></p>
          <p>Specify the namespace URI. The values of <code>prefix</code> and 
            <code>uri</code> are used to create an XML namespace declaration
            in the generated stylesheet.</p>
        </a:documentation>
        <data type="anyURI"/>
      </attribute>
    </interleave>
  </define>

  <define name="xml2tex.template.attributes">
    <interleave>
      <choice>
        <attribute name="context">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>context</i> attribute</h1>
            <p>Value: <code>XPath expression</code></p>
            <p>The content of this attribute is an XSLT 2 matching pattern that may contain 
              QNames with namespace prefixes. These prefixes and the namespaces must be declared 
              first in the XML and second with the <code>ns</code> element.</p>
          </a:documentation>
          <text/>
        </attribute>
        <attribute name="name">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>name</i> attribute</h1>
            <p>Value: <code>xs:string</code></p>
            <p>Provides a name for the template. will be expanded to an XSLT 2 named template with the possibility to declare rule-Elements within..</p>
          </a:documentation>
          <text/>
        </attribute>
      </choice>
      <optional>
        <attribute name="priority">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>priority</i> attribute</h1>
            <p>Value: <code>xs:integer</code></p>
            <p>Can be used to override the internally evaluated priority of the template order.</p>
          </a:documentation>
          <data type="integer"/>
        </attribute>
      </optional>
    </interleave>
  </define>

  <define name="xml2tex.rule.attributes">
    <interleave>
      <choice>
        <interleave>
          <attribute name="name">
            <a:documentation xmlns="http://www.w3.org/1999/xhtml">
              <h1>The <i>name</i> attribute</h1>
              <p>Value: <code>xs:string</code></p>
              <p>Provides a name for the TeX instruction. The name <i>foo</i> will expand to 
                either <code>\foo</code> or <code>\begin{foo}…\end{foo}</code> depending on the value of the 
                type attribute.</p>
            </a:documentation>
            <text/>
          </attribute>
          <attribute name="type">
            <a:documentation xmlns="http://www.w3.org/1999/xhtml">
              <h1>The <i>type</i> attribute</h1>
              <p>Values: <code>cmd|env</code></p>
              <p>Declares whether you want to create a command (<i>cmd</i>)such as <code>\foo</code> or 
                an environment <i>env</i> such as <code>\begin{foo}…\end{foo}</code></p>
            </a:documentation>
            <choice>
              <value type="string">cmd</value>
              <value type="string">env</value>
            </choice>
          </attribute>
        </interleave>
        <empty/>
      </choice>
      <optional>
        <attribute name="break-after">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>break-after</i> attribute</h1>
            <p>Value: <code>xs:integer</code></p>
            <p>Specifiies the number of breaks which will be added <i>after</i> the TeX instruction</p>
          </a:documentation>
          <data type="integer"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="break-before">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>break-before</i> attribute</h1>
            <p>Value: <code>xs:integer</code></p>
            <p>Specifies the number of breaks which will be added <i>before</i> the TeX instruction</p>
          </a:documentation>
          <data type="integer"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="mathmode">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>mathmode</i> attribute</h1>
            <p>Values: <code>true|false</code></p>
            <p>The content will be enclosed in '$' characters which cause TeX to 
              switch to math mode.</p>
          </a:documentation> 
          <data type="boolean"/>
        </attribute>
      </optional>
    </interleave>
  </define>

  <define name="xml2tex.charmap.attributes">
    <optional>
      <attribute name="ignore-imported-charmaps">
        <a:documentation>
          <h1>The <i>ignore-imported-charmaps</i> attribute</h1>
          <p>Value: <code>xs:boolean</code></p>
          <p>Whether character maps from imported configurations should be 
            ignored (<code>true</code>) or overridden (<code>false</code>). 
            When you omit this attribute, the default is to override 
            imported configurations, e.g. prefer character mappings 
            from the importing configuration.</p>
        </a:documentation>
        <data type="boolean"/>
    </attribute>
    </optional>
  </define>

  <define name="xml2tex.char.attributes">
    <interleave>
      <attribute name="character">
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">
          <h1>The <i>character</i> attribute</h1>
          <p>Value: <code>xs:string</code></p>
          <p>Character to be replaced</p>
        </a:documentation>
        <text/>
      </attribute>
      <attribute name="string">
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">
          <h1>The <i>string</i> attribute</h1>
          <p>Value: <code>xs:string</code></p>
          <p>The value of the <code>@character</code> attribute is replaced with the value of this attribute.</p>
        </a:documentation>
        <text/>
      </attribute>
      <optional>
        <attribute name="context">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>context</i> attribute</h1>
            <p>Value: <code>XPath expression</code></p>
            <p>The content of this attribute is an XSLT 2 matching pattern that may contain 
              QNames with namespace prefixes. These prefixes and the namespaces must be declared 
              first in the XML and second with the <code>ns</code> element.</p>
            <p>Please be aware that MathML is converted by a separate module, named 
              <a href="https://github.com/transpect/mml2tex">mml2tex</a>. Please look there into
              <code>texmap/texmap.xml</code></p>
          </a:documentation>
          <text/>
        </attribute>
      </optional>
      <optional>
        <attribute name="mode">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>mode</i> attribute</h1>
            <p>Values: <code>text</code> or <code>math</code></p>
            <p>Specifies the mode to which the character mapping is applied. If no mode
            attribute was specified, the character mapping can be applied to both modes (if applicable).</p>
          </a:documentation>
          <choice>
            <value>text</value>
            <value>math</value>
          </choice>
        </attribute>
      </optional>
    </interleave>
  </define>
  
  <define name="xml2tex.style.attributes">
    <attribute name="name">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>name</i> attribute</h1>
        <p>Value: <code>XML Attribute value</code></p>
        <p>Specifies the attribute value of an XML element. The attribute name has to be declared
          globally with <code>@style-attribute</code> at <code>xml2tex:set</code>.</p>
      </a:documentation>
    </attribute>
    <attribute name="start">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>start</i> attribute</h1>
        <p>Value: <code>Plain text</code></p>
        <p>The value of this attribute is inserted before the selected XML element.</p>
      </a:documentation>
    </attribute>
    <attribute name="end">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>end</i> attribute</h1>
        <p>Value: <code>Plain text</code></p>
        <p>The value of this attribute is inserted after the selected XML element.</p>
      </a:documentation>
    </attribute>
  </define>

  <define name="xml2tex.regex.attributes">
    <attribute name="regex">
      <a:documentation xmlns="http://www.w3.org/1999/xhtml">
        <h1>The <i>regex</i> attribute</h1>
        <p>Value: <code>regular expression pattern</code></p>
        <p>Specifies the regular expression pattern to match certain text strings.</p>
        <p>You can also use regular expression groups to reference them later with
          the <code>@regex-group</code> attribute in <code>param</code>, <code>option</code> or
          <code>text</code></p>
      </a:documentation>
      <text/>
    </attribute>
  </define>
  
  <define name="xml2tex.file.attributes">
    <interleave>
      <attribute name="href">
        <a:documentation xmlns="http://www.w3.org/1999/xhtml">
          <h1>The <i>href</i> attribute</h1>
          <p>Specifies a path on the local file system.</p>
        </a:documentation>
        <text/>
      </attribute>
      <optional>
        <attribute name="encoding">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>encoding</i> attribute</h1>
            <p>With this optional attribute, you can specify the 
              file encoding. The default value is 'utf-8'</p>
          </a:documentation>
          <text/>
        </attribute>
      </optional>
      <optional>
        <attribute name="method">
          <a:documentation xmlns="http://www.w3.org/1999/xhtml">
            <h1>The <i>method</i> attribute</h1>
            <p>With this optional attribute, you can specify the 
              serialization method. The default value is 'text', 
              other permitted values are 'xml' and 'html'.</p>
          </a:documentation>
          <choice>
            <value>text</value>
            <value>xml</value>
            <value>xhtml</value>
            <value>html</value>
          </choice>
        </attribute>
      </optional>
    </interleave>
  </define>

  <!--  *
        * content models
        * -->

  <define name="xml2tex.set.content">
    <interleave>
      <zeroOrMore>
        <choice>
          <ref name="xslt2.import.element"/>
          <ref name="xslt2.param.element"/>
          <ref name="xslt2.key.element"/>
          <ref name="xslt2.template.element"/>
          <ref name="xslt2.function.element"/>
          <ref name="xslt2.variable.element"/>
          <ref name="xml2tex.import"/>
          <ref name="xml2tex.ns"/>
          <ref name="xml2tex.template"/>
          <ref name="xml2tex.style"/>
          <ref name="xml2tex.regex"/>
        </choice>
      </zeroOrMore>
      <optional>
        <ref name="xml2tex.preamble"/>
      </optional>
      <optional>
        <ref name="xml2tex.front"/>
      </optional>
      <optional>
        <ref name="xml2tex.back"/>
      </optional>
      <optional>
        <ref name="xml2tex.charmap"/>
      </optional>
    </interleave>
  </define>

  <define name="xml2tex.content.empty">
    <empty/>
  </define>

  <define name="xml2tex.templatemodel.content">
    <zeroOrMore>
      <ref name="xslt2.param.element"/>
    </zeroOrMore>
    <zeroOrMore>
      <choice>
        <ref name="xml2tex.rule"/>
        <ref name="xml2tex.file"/>
        <ref name="xslt2.instruction.category"/>
      </choice>
    </zeroOrMore>
  </define>

  <define name="xml2tex.charmap.content">
    <oneOrMore>
      <ref name="xml2tex.char"/>
    </oneOrMore>
  </define>

  <define name="xml2tex.rule.content">
    <zeroOrMore>
      <choice>
        <ref name="xml2tex.text"/>
        <ref name="xml2tex.param"/>
        <ref name="xml2tex.option"/>
        <ref name="xslt2.instruction.category"/>
      </choice>
    </zeroOrMore>
  </define>

  <define name="xml2tex.atom.content">
    <zeroOrMore>
      <choice>
        <text/>
        <ref name="xslt2.instruction.category"/>
      </choice>
    </zeroOrMore>
  </define>

  <!--  *
        * schematron checks
        * -->

  <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="xml2tex" uri="http://transpect.io/xml2tex"/>

  <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    <sch:rule context="xml2tex:*[local-name() = ('option', 'param', 'text')]">
      <sch:let name="context" value="ancestor::xml2tex:template/@context"/>
      <sch:assert test="not(normalize-space(.) and @select)"> It's not permitted to use inline text and both a @select expression. Please correct xml2tex:template[@context eq '<sch:value-of select="$context"/>']. </sch:assert>
    </sch:rule>
  </sch:pattern>

  <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    <sch:rule context="@regex-group">
      <sch:assert test="not(ancestor::xml2tex:template)"> The @regex-group attribute is not permitted, when the parent is &lt;xml2tex:template&gt; </sch:assert>
    </sch:rule>
  </sch:pattern>

  <sch:pattern xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    <sch:rule context="@regex-group">
      <sch:assert test="not(ancestor::xml2tex:template)"> The @select attribute is not permitted, when the parent is &lt;xml2tex:regex&gt; </sch:assert>
    </sch:rule>
  </sch:pattern>

</grammar>
